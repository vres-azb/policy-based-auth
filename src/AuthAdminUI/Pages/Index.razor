@page "/"
@using PolicyBased.Infra.Models
@using PolicyBased.Infra.Persistence.Repositories
@using PolicyDtos = PolicyBased.Infra.Dtos;
@inject IUserRepo UserRepo;

<PageTitle>Policies</PageTitle>

<FluentBreadcrumb>
    <FluentBreadcrumbItem Href="#">
        <h5>
            Policies
        </h5>
    </FluentBreadcrumbItem>
</FluentBreadcrumb>

<FluentDataGrid Items="@policyList" ItemKey="(a=>a.Id)" ResizableColumns="false" GridTemplateColumns="0.1fr 1fr">
    <EmptyContent>No policies</EmptyContent>
    <ChildContent>

        <PropertyColumn Align="Align.Start" Property="@(a => a.Name)" Sortable="true" />
        <TemplateColumn Title="Policy" Context="policyContext" Align="Align.Start">
            <FluentDataGrid Items="@policyContext.Policies.AsQueryable()" GenerateHeader="GenerateHeaderOption.None" GridTemplateColumns="0.2fr 0.1fr  1fr">
                <TemplateColumn Title="Actions" Context="pContext">
                    @{
                        int policId = pContext.Id;
                        string policyEditUrl = $"/Policies/Edit/{policId}";
                    }
                    <FluentAnchor Href="@policyEditUrl" IconStart="@(new Icons.Regular.Size24.Edit())">
                    </FluentAnchor>
                </TemplateColumn>
                <PropertyColumn Property="@(p => p.Name)" Sortable="true" />
                <TemplateColumn Context="permContext">
                    @{
                        var roles = permContext.Roles.AsQueryable();
                    }
                    <FluentDataGrid Items="@roles" GridTemplateColumns="0.2fr 1fr">
                        <PropertyColumn Property="@(p => p.Name)" Title="Role" Sortable="true" />
                        <TemplateColumn Title="Permissions" Context="roleContext">
                            @{
                                string[] perms = roleContext.Permissions.Select(a => a.Name).ToArray();
                                string permsNames = string.Join(", ", perms);
                            }
                            <FluentLabel>@permsNames</FluentLabel>
                            </TemplateColumn>
                        </FluentDataGrid>
                    </TemplateColumn>
                </FluentDataGrid>
            </TemplateColumn>
        </ChildContent>
    </FluentDataGrid>

    @code {
    IQueryable<PolicyDtos.Application>? policyList = null;
    int currentAppId;
    protected override async Task OnInitializedAsync()
    {
        var allPolicies = await UserRepo.GetPolicies();
        policyList = allPolicies.AsQueryable();
    }
}